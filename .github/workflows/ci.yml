name: CI

on:

  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest]
        node-version: [20]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Turbo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test
        env:
          HPKV_API_BASE_URL: ${{ secrets.HPKV_API_BASE_URL }}
          HPKV_API_KEY: ${{ secrets.HPKV_API_KEY }}

      - name: Type check
        run: pnpm type-check

      - name: Lint
        run: pnpm lint

  compatibility:
    name: Test package compatibility
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Test CommonJS import
        run: |
          cd packages/zustand-multiplayer
          echo "const { multiplayer } = require('./dist/index.js');" > test-cjs.js
          echo "console.log('CommonJS import:', typeof multiplayer);" >> test-cjs.js
          node test-cjs.js

      - name: Test ES Module import
        run: |
          cd packages/zustand-multiplayer
          echo '{"type": "module"}' > test-package.json
          echo "import { multiplayer } from './dist/index.mjs';" > test-esm.mjs
          echo "console.log('ES Module import:', typeof multiplayer);" >> test-esm.mjs
          node test-esm.mjs

      - name: Cleanup
        run: |
          cd packages/zustand-multiplayer
          rm -f test-cjs.js test-esm.mjs test-package.json 